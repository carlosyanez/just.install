boxed_packages <- tibble::tribble(~package,       ~source,
"librarian",    "DesiQuintans/librarian",
"box",          "CRAN",
"randomForest", "CRAN",    # for RandomForest
"LiblineaR",    "CRAN",    # for linear SVM
"rpart",        "CRAN",    # for decission trees
"rpart.plot",   "CRAN",
"kknn",         "CRAN",    # For KNN
"doParallel",   "CRAN",    # enable parallel processing with tidymodels
"progressr",     "CRAN"    # progress bar
)
installed_packages  <- rownames(installed.packages())
boxed_packages$package %in% installed_packages
boxed_packages[,boxed_packages$package %in% installed_packages]
boxed_packages[boxed_packages$package %in% installed_packages,]
to_install <- boxed_packages
to_install[!(to_install$package %in% installed_packages),]
to_install[!(to_install$package %in% installed_packages),]
missing <- to_install[to_install$package %in% installed_packages,]
View(missing)
there <- to_install[to_install$package %in% installed_packages,]
missing   <- to_install[!(to_install$package %in% installed_packages),]
for(i in there){
message(i," already installed")
}
for(i in there){
message(i," already installed")
}
for(i in there){
message(i," already installed")
}
for(i in there){
message(i$package," already installed")
}
for(i in 1:nrow(there)){
message(there[i,]$package," already installed")
}
View(boxed_packages)
install.packages("metathis",repos = "https://gadenbuie.r-universe.dev")
just.install <- function(to_install){
installed_packages  <- rownames(installed.packages())
there <- to_install[to_install$package %in% installed_packages,]
missing   <- to_install[!(to_install$package %in% installed_packages),]
# these packages are already installed
for(i in 1:nrow(there)){
message(there[i,]$package," already installed")
}
# installing new packages
for(i in 1:nrow(missing)){
if (!(missing[i,]$package %in% installed_packages)) {
if(missing[i,]$repo %in% c("CRAN")){
install.packages(missing[i,]$package)                              # classic installation from CRAN
}else{
if(missing[i,]$repo %in% c("Bioc","Bioconductor","BioConductor")){
BiocManager::install(missing[i,]$package)                        # Bioconductor
}else{
if(missing[i,]$repo %in% c("Github","GitHub","github","gh")){
remotes::install_github(missing[i,]$url)                       #Github repository
else{
install.packages(missing[i,]$package,repos=missing[i,]$url) # minin-cran, r-universe style repo
}
}
}
}
}
}
# goodbye
message("Task done")
}
installed_packages  <- rownames(installed.packages())
there <- to_install[to_install$package %in% installed_packages,]
missing   <- to_install[!(to_install$package %in% installed_packages),]
# these packages are already installed
for(i in 1:nrow(there)){
message(there[i,]$package," already installed")
}
# installing new packages
for(i in 1:nrow(missing)){
if (!(missing[i,]$package %in% installed_packages)) {
if(missing[i,]$repo %in% c("CRAN")){
install.packages(missing[i,]$package)                              # classic installation from CRAN
}else{
if(missing[i,]$repo %in% c("Bioc","Bioconductor","BioConductor")){
BiocManager::install(missing[i,]$package)                        # Bioconductor
}else{
if(missing[i,]$repo %in% c("Github","GitHub","github","gh")){
remotes::install_github(missing[i,]$url)                       #Github repository
else{
install.packages(missing[i,]$package,repos=missing[i,]$url) # minin-cran, r-universe style repo
}
}
}
}
}
}
for(i in 1:nrow(missing)){
if(missing[i,]$repo %in% c("CRAN")){
install.packages(missing[i,]$package,repos="https://cloud.r-project.org/")  # classic installation from CRAN
}else{
if(missing[i,]$repo %in% c("Bioc","Bioconductor","BioConductor")){
BiocManager::install(missing[i,]$package)                                # Bioconductor
}else{
if(missing[i,]$repo %in% c("Github","GitHub","github","gh")){
remotes::install_github(missing[i,]$url)                               #Github repository
else{
install.packages(missing[i,]$package,repos=missing[i,]$url)          # minin-cran, r-universe style repo
}
}
}
}
}
just_install <- tibble::tribble(~package,       ~source,~url,
"librarian",    "Github","DesiQuintans/librarian",
"box",          "CRAN","",
"randomForest", "CRAN","",    # for RandomForest
"LiblineaR",    "CRAN","",    # for linear SVM
"rpart",        "CRAN","",    # for decision trees
"rpart.plot",   "CRAN","",    # plotting decision trees
"kknn",         "CRAN","",    # For KNN
"doParallel",   "CRAN","",    # enable parallel processing with tidymodels
"progressr",     "CRAN",""    # progress bar
)
for(i in 1:nrow(missing)){
if(missing[i,]$repo %in% c("CRAN")){
install.packages(missing[i,]$package,repos="https://cloud.r-project.org/")  # classic installation from CRAN
}else{
if(missing[i,]$repo %in% c("Bioc","Bioconductor","BioConductor")){
BiocManager::install(missing[i,]$package)                                # Bioconductor
}else{
if(missing[i,]$repo %in% c("Github","GitHub","github","gh")){
remotes::install_github(missing[i,]$url)                               #Github repository
else{
install.packages(missing[i,]$package,repos=missing[i,]$url)          # minin-cran, r-universe style repo
}
}
}
}
}
for(i in 1:nrow(missing)){
if(missing[i,]$repo %in% c("CRAN")){
install.packages(missing[i,]$package,repos="https://cloud.r-project.org/")  # classic installation from CRAN
}else{
if(missing[i,]$repo %in% c("Bioc","Bioconductor","BioConductor")){
BiocManager::install(missing[i,]$package)                                # Bioconductor
}else{
if(missing[i,]$repo %in% c("Github","GitHub","github","gh")){
remotes::install_github(missing[i,]$url)                               #Github repository
else{
install.packages(missing[i,]$package,repos=missing[i,]$url)          # minin-cran, r-universe style repo
}
}
}
}
}
installed_packages  <- rownames(installed.packages())
there <- to_install[to_install$package %in% installed_packages,]
missing   <- to_install[!(to_install$package %in% installed_packages),]
View(to_install)
to_install <- tibble::tribble(~package,       ~source,~url,
"librarian",    "Github","DesiQuintans/librarian",
"box",          "CRAN","",
"randomForest", "CRAN","",    # for RandomForest
"LiblineaR",    "CRAN","",    # for linear SVM
"rpart",        "CRAN","",    # for decision trees
"rpart.plot",   "CRAN","",    # plotting decision trees
"kknn",         "CRAN","",    # For KNN
"doParallel",   "CRAN","",    # enable parallel processing with tidymodels
"progressr",     "CRAN",""    # progress bar
)
View(to_install)
to_install <- tibble::tribble(~package,       ~source,~url,
"librarian",    "Github","DesiQuintans/librarian",
"box",          "CRAN","",
"randomForest", "CRAN","",    # for RandomForest
"LiblineaR",    "CRAN","",    # for linear SVM
"rpart",        "CRAN","",    # for decision trees
"rpart.plot",   "CRAN","",    # plotting decision trees
"kknn",         "CRAN","",    # For KNN
"doParallel",   "CRAN","",    # enable parallel processing with tidymodels
"progressr",     "CRAN",""    # progress bar,
)
just_install <-tibble::tribble(~package,       ~source,~url,
"librarian",    "Github","DesiQuintans/librarian",
"box",          "CRAN","",
"randomForest", "CRAN","",    # for RandomForest
"LiblineaR",    "CRAN","",    # for linear SVM
"rpart",        "CRAN","",    # for decision trees
"rpart.plot",   "CRAN","",    # plotting decision trees
"kknn",         "CRAN","",    # For KNN
"doParallel",   "CRAN","",    # enable parallel processing with tidymodels
"progressr",     "CRAN","",    # progress bar
"metathis",      "Other","https://gadenbuie.r-universe.dev",
"airway",        "Bioconductor",""
)
View(just_install)
installed_packages  <- rownames(installed.packages())
there <- to_install[to_install$package %in% installed_packages,]
missing   <- to_install[!(to_install$package %in% installed_packages),]
just_install <-tibble::tribble(~package,       ~source,~url,
"librarian",    "Github","DesiQuintans/librarian",
"box",          "CRAN","",
"randomForest", "CRAN","",    # for RandomForest
"LiblineaR",    "CRAN","",    # for linear SVM
"rpart",        "CRAN","",    # for decision trees
"rpart.plot",   "CRAN","",    # plotting decision trees
"kknn",         "CRAN","",    # For KNN
"doParallel",   "CRAN","",    # enable parallel processing with tidymodels
"progressr",     "CRAN","",    # progress bar
"metathis",      "Other","https://gadenbuie.r-universe.dev",
"airway",        "Bioconductor",""
)
installed_packages  <- rownames(installed.packages())
there <- to_install[to_install$package %in% installed_packages,]
to_install <-tibble::tribble(~package,       ~source,~url,
"librarian",    "Github","DesiQuintans/librarian",
"box",          "CRAN","",
"randomForest", "CRAN","",    # for RandomForest
"LiblineaR",    "CRAN","",    # for linear SVM
"rpart",        "CRAN","",    # for decision trees
"rpart.plot",   "CRAN","",    # plotting decision trees
"kknn",         "CRAN","",    # For KNN
"doParallel",   "CRAN","",    # enable parallel processing with tidymodels
"progressr",     "CRAN","",    # progress bar
"metathis",      "Other","https://gadenbuie.r-universe.dev",
"airway",        "Bioconductor",""
)
to_install <-tibble::tribble(~package,       ~source,~url,
"librarian",    "Github","DesiQuintans/librarian",
"box",          "CRAN","",
"randomForest", "CRAN","",    # for RandomForest
"LiblineaR",    "CRAN","",    # for linear SVM
"rpart",        "CRAN","",    # for decision trees
"rpart.plot",   "CRAN","",    # plotting decision trees
"kknn",         "CRAN","",    # For KNN
"doParallel",   "CRAN","",    # enable parallel processing with tidymodels
"progressr",     "CRAN","",    # progress bar
"metathis",      "Other","https://gadenbuie.r-universe.dev",
"airway",        "Bioconductor",""
)
just.install <- function(to_install){
installed_packages  <- rownames(installed.packages())
there <- to_install[to_install$package %in% installed_packages,]
missing   <- to_install[!(to_install$package %in% installed_packages),]
# these packages are already installed
for(i in 1:nrow(there)){
message(there[i,]$package," already installed")
}
# installing new packages
for(i in 1:nrow(missing)){
if(missing[i,]$repo %in% c("CRAN")){
install.packages(missing[i,]$package,repos="https://cloud.r-project.org/")  # classic installation from CRAN
}else{
if(missing[i,]$repo %in% c("Bioc","Bioconductor","BioConductor")){
BiocManager::install(missing[i,]$package)                                # Bioconductor
}else{
if(missing[i,]$repo %in% c("Github","GitHub","github","gh")){
remotes::install_github(missing[i,]$url)                               #Github repository
else{
install.packages(missing[i,]$package,repos=missing[i,]$url)          # minin-cran, r-universe style repo
}
}
}
}
}
# goodbye
message("Task done")
}
installed_packages  <- rownames(installed.packages())
there <- to_install[to_install$package %in% installed_packages,]
missing   <- to_install[!(to_install$package %in% installed_packages),]
# these packages are already installed
for(i in 1:nrow(there)){
message(there[i,]$package," already installed")
}
# installing new packages
for(i in 1:nrow(missing)){
if(missing[i,]$repo %in% c("CRAN")){
install.packages(missing[i,]$package,repos="https://cloud.r-project.org/")  # classic installation from CRAN
}else{
if(missing[i,]$repo %in% c("Bioc","Bioconductor","BioConductor")){
BiocManager::install(missing[i,]$package)                                # Bioconductor
}else{
if(missing[i,]$repo %in% c("Github","GitHub","github","gh")){
remotes::install_github(missing[i,]$url)                               #Github repository
else{
install.packages(missing[i,]$package,repos=missing[i,]$url)          # minin-cran, r-universe style repo
}
}
}
}
}
i <-1
install.packages(missing[i,]$package,repos="https://cloud.r-project.org/")  # classic installation from CRAN
if(missing[i,]$repo %in% c("CRAN")){
install.packages(missing[i,]$package,repos="https://cloud.r-project.org/")  # classic installation from CRAN
}
if(missing[i,]$source %in% c("CRAN")){
install.packages(missing[i,]$package,repos="https://cloud.r-project.org/")  # classic installation from CRAN
}
if(missing[i,]$source %in% c("CRAN")){
install.packages(missing[i,]$package,repos="https://cloud.r-project.org/")  # classic installation from CRAN
}else{
if(missing[i,]$source %in% c("Bioc","Bioconductor","BioConductor")){
BiocManager::install(missing[i,]$package)                                # Bioconductor
}else{
if(missing[i,]$source %in% c("Github","GitHub","github","gh")){
remotes::install_github(missing[i,]$url)                               #Github repository
else{
install.packages(missing[i,]$package,repos=missing[i,]$url)          # mini-cran, r-universe style repo
}
}
}
}
for(i in 1:nrow(missing)){
if(missing[i,]$source %in% c("CRAN")){
install.packages(missing[i,]$package,repos="https://cloud.r-project.org/")  # classic installation from CRAN
}else{
if(missing[i,]$source %in% c("Bioc","Bioconductor","BioConductor")){
BiocManager::install(missing[i,]$package)                                # Bioconductor
}else{
if(missing[i,]$source %in% c("Github","GitHub","github","gh")){
remotes::install_github(missing[i,]$url)                               #Github repository
}else{
install.packages(missing[i,]$package,repos=missing[i,]$url)          # mini-cran, r-universe style repo
}
}
}
}
just.install <- function(to_install){
installed_packages  <- rownames(installed.packages())
there <- to_install[to_install$package %in% installed_packages,]
missing   <- to_install[!(to_install$package %in% installed_packages),]
# these packages are already installed
for(i in 1:nrow(there)){
message(there[i,]$package," already installed")
}
# installing new packages
for(i in 1:nrow(missing)){
if(missing[i,]$source %in% c("CRAN")){
install.packages(missing[i,]$package,repos="https://cloud.r-project.org/")  # classic installation from CRAN
}else{
if(missing[i,]$source %in% c("Bioc","Bioconductor","BioConductor")){
BiocManager::install(missing[i,]$package)                                # Bioconductor
}else{
if(missing[i,]$source %in% c("Github","GitHub","github","gh")){
remotes::install_github(missing[i,]$url)                               #Github repository
}else{
install.packages(missing[i,]$package,repos=missing[i,]$url)          # mini-cran, r-universe style repo
}
}
}
}
# goodbye
message("Task done")
}
just.install(to_install)
View(missing)
remove.packages(metathis)
remove.packages("metathis")
just.install(to_install)
library(just.install)
to_install <-tibble::tribble(~package,       ~source,~url,
"librarian",    "Github","DesiQuintans/librarian",
"box",          "CRAN","",
"randomForest", "CRAN","",    # for RandomForest
"LiblineaR",    "CRAN","",    # for linear SVM
"rpart",        "CRAN","",    # for decision trees
"rpart.plot",   "CRAN","",    # plotting decision trees
"kknn",         "CRAN","",    # For KNN
"doParallel",   "CRAN","",    # enable parallel processing with tidymodels
"progressr",     "CRAN","",    # progress bar
"metathis",      "Other","https://gadenbuie.r-universe.dev",
"airway",        "Bioconductor",""
)
just.install(to_install)
just.install(to_install)
library(just.install)
